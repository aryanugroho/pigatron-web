apply from: 'config.gradle'

buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.github.ben-manes:gradle-versions-plugin:0.12.0')
		classpath("com.moowork.gradle:gradle-node-plugin:0.12")
		classpath("com.moowork.gradle:gradle-gulp-plugin:0.12")
	}
}

apply plugin: 'com.github.ben-manes.versions'

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'spring-boot'
	apply plugin: 'maven'
	group = 'com.pigatron.web'
	version = '0.0.1-SNAPSHOT'
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		compile('org.apache.commons:commons-lang3:3.4')

		testCompile("org.easytesting:fest-assert-core:2.0M10")
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
	idea {
		module {
			excludeDirs += file('node_modules')
			excludeDirs += file('bower_components')
			testSourceDirs += file('src/test/unit')
			testSourceDirs += file('src/test/integration')
			testSourceDirs += file('src/test/functional')
		}
	}
}


subprojects {
	// Web Resource Handling
	apply plugin: "com.moowork.node"
	apply plugin: "com.moowork.gulp"
	node {
		version = '5.9.0'
		download = true
	}
	gulp {
		workDir = file("${project.projectDir}")
		colors = true
		bufferOutput = false
	}
	task bowerInstall(type: NodeTask) {
		script = file('node_modules/bower/bin/bower')
		args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
				"--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
				"--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
				'install']
		inputs.files file('bower.json')
		outputs.dir file('bower_components')
		dependsOn npmInstall
	}

	task webResourceBuildLocal {
		dependsOn gulp_localBuild
	}
	gulp_localBuild.outputs.dir file("$buildDir/resources/main/static")
	gulp_localBuild.inputs.dir file("src/main/resources/static")

	task webResourceBuildLib {
		dependsOn gulp_libBuild
	}
	gulp_libBuild.outputs.dir file("$buildDir/resources/main/static")
	gulp_libBuild.inputs.dir file("bower_components")
	gulp_libBuild.inputs.file file("gulpfile.js")
	gulp_libBuild.dependsOn bowerInstall
	gulp_libBuild.dependsOn installGulp

	processResources.dependsOn webResourceBuildLocal
	build.dependsOn webResourceBuildLib
	webResourceBuildLocal.mustRunAfter webResourceBuildLib
}



jar {
	baseName = 'pigatron-web'
	version = versionName
}
sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile project(":web-admin-shop")
	compile project(":web-public-cms")
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}

bootRepackage {
	executable = true
}

task buildInfo {
	def cmd = "git describe --long --tags --dirty --always"
	def proc = cmd.execute()
	ext.revision = proc.text.trim()
	def props = new Properties()
	props.setProperty("pigatron.revision", ext.revision);
	def propFile = new File("application.properties");
	propFile.createNewFile();
	props.store(propFile.newWriter(), null);
}
bootRepackage.dependsOn buildInfo